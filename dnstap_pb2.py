# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dnstap.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0c\x64nstap.proto\x12\x06\x64nstap\"\x94\x01\n\x06\x44nstap\x12\x10\n\x08identity\x18\x01 \x01(\x0c\x12\x0f\n\x07version\x18\x02 \x01(\x0c\x12\r\n\x05\x65xtra\x18\x03 \x01(\x0c\x12!\n\x04type\x18\x0f \x02(\x0e\x32\x13.dnstap.Dnstap.Type\x12 \n\x07message\x18\x0e \x01(\x0b\x32\x0f.dnstap.Message\"\x13\n\x04Type\x12\x0b\n\x07MESSAGE\x10\x01\"\xa1\x02\n\x06Policy\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x0c\n\x04rule\x18\x02 \x01(\x0c\x12%\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32\x15.dnstap.Policy.Action\x12#\n\x05match\x18\x04 \x01(\x0e\x32\x14.dnstap.Policy.Match\x12\r\n\x05value\x18\x05 \x01(\x0c\"J\n\x05Match\x12\t\n\x05QNAME\x10\x01\x12\r\n\tCLIENT_IP\x10\x02\x12\x0f\n\x0bRESPONSE_IP\x10\x03\x12\x0b\n\x07NS_NAME\x10\x04\x12\t\n\x05NS_IP\x10\x05\"T\n\x06\x41\x63tion\x12\x0c\n\x08NXDOMAIN\x10\x01\x12\n\n\x06NODATA\x10\x02\x12\x08\n\x04PASS\x10\x03\x12\x08\n\x04\x44ROP\x10\x04\x12\x0c\n\x08TRUNCATE\x10\x05\x12\x0e\n\nLOCAL_DATA\x10\x06\"\xf9\x05\n\x07Message\x12\"\n\x04type\x18\x01 \x02(\x0e\x32\x14.dnstap.Message.Type\x12+\n\rsocket_family\x18\x02 \x01(\x0e\x32\x14.dnstap.SocketFamily\x12/\n\x0fsocket_protocol\x18\x03 \x01(\x0e\x32\x16.dnstap.SocketProtocol\x12\x15\n\rquery_address\x18\x04 \x01(\x0c\x12\x18\n\x10response_address\x18\x05 \x01(\x0c\x12\x12\n\nquery_port\x18\x06 \x01(\r\x12\x15\n\rresponse_port\x18\x07 \x01(\r\x12\x16\n\x0equery_time_sec\x18\x08 \x01(\x04\x12\x17\n\x0fquery_time_nsec\x18\t \x01(\x07\x12\x15\n\rquery_message\x18\n \x01(\x0c\x12\x12\n\nquery_zone\x18\x0b \x01(\x0c\x12\x19\n\x11response_time_sec\x18\x0c \x01(\x04\x12\x1a\n\x12response_time_nsec\x18\r \x01(\x07\x12\x18\n\x10response_message\x18\x0e \x01(\x0c\x12\x1e\n\x06policy\x18\x0f \x01(\x0b\x32\x0e.dnstap.Policy\x12+\n\rhttp_protocol\x18\x10 \x01(\x0e\x32\x14.dnstap.HttpProtocol\"\x95\x02\n\x04Type\x12\x0e\n\nAUTH_QUERY\x10\x01\x12\x11\n\rAUTH_RESPONSE\x10\x02\x12\x12\n\x0eRESOLVER_QUERY\x10\x03\x12\x15\n\x11RESOLVER_RESPONSE\x10\x04\x12\x10\n\x0c\x43LIENT_QUERY\x10\x05\x12\x13\n\x0f\x43LIENT_RESPONSE\x10\x06\x12\x13\n\x0f\x46ORWARDER_QUERY\x10\x07\x12\x16\n\x12\x46ORWARDER_RESPONSE\x10\x08\x12\x0e\n\nSTUB_QUERY\x10\t\x12\x11\n\rSTUB_RESPONSE\x10\n\x12\x0e\n\nTOOL_QUERY\x10\x0b\x12\x11\n\rTOOL_RESPONSE\x10\x0c\x12\x10\n\x0cUPDATE_QUERY\x10\r\x12\x13\n\x0fUPDATE_RESPONSE\x10\x0e*#\n\x0cSocketFamily\x12\x08\n\x04INET\x10\x01\x12\t\n\x05INET6\x10\x02*_\n\x0eSocketProtocol\x12\x07\n\x03UDP\x10\x01\x12\x07\n\x03TCP\x10\x02\x12\x07\n\x03\x44OT\x10\x03\x12\x07\n\x03\x44OH\x10\x04\x12\x0f\n\x0b\x44NSCryptUDP\x10\x05\x12\x0f\n\x0b\x44NSCryptTCP\x10\x06\x12\x07\n\x03\x44OQ\x10\x07*/\n\x0cHttpProtocol\x12\t\n\x05HTTP1\x10\x01\x12\t\n\x05HTTP2\x10\x02\x12\t\n\x05HTTP3\x10\x03')

_SOCKETFAMILY = DESCRIPTOR.enum_types_by_name['SocketFamily']
SocketFamily = enum_type_wrapper.EnumTypeWrapper(_SOCKETFAMILY)
_SOCKETPROTOCOL = DESCRIPTOR.enum_types_by_name['SocketProtocol']
SocketProtocol = enum_type_wrapper.EnumTypeWrapper(_SOCKETPROTOCOL)
_HTTPPROTOCOL = DESCRIPTOR.enum_types_by_name['HttpProtocol']
HttpProtocol = enum_type_wrapper.EnumTypeWrapper(_HTTPPROTOCOL)
INET = 1
INET6 = 2
UDP = 1
TCP = 2
DOT = 3
DOH = 4
DNSCryptUDP = 5
DNSCryptTCP = 6
DOQ = 7
HTTP1 = 1
HTTP2 = 2
HTTP3 = 3


_DNSTAP = DESCRIPTOR.message_types_by_name['Dnstap']
_POLICY = DESCRIPTOR.message_types_by_name['Policy']
_MESSAGE = DESCRIPTOR.message_types_by_name['Message']
_DNSTAP_TYPE = _DNSTAP.enum_types_by_name['Type']
_POLICY_MATCH = _POLICY.enum_types_by_name['Match']
_POLICY_ACTION = _POLICY.enum_types_by_name['Action']
_MESSAGE_TYPE = _MESSAGE.enum_types_by_name['Type']
Dnstap = _reflection.GeneratedProtocolMessageType('Dnstap', (_message.Message,), {
  'DESCRIPTOR' : _DNSTAP,
  '__module__' : 'dnstap_pb2'
  # @@protoc_insertion_point(class_scope:dnstap.Dnstap)
  })
_sym_db.RegisterMessage(Dnstap)

Policy = _reflection.GeneratedProtocolMessageType('Policy', (_message.Message,), {
  'DESCRIPTOR' : _POLICY,
  '__module__' : 'dnstap_pb2'
  # @@protoc_insertion_point(class_scope:dnstap.Policy)
  })
_sym_db.RegisterMessage(Policy)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), {
  'DESCRIPTOR' : _MESSAGE,
  '__module__' : 'dnstap_pb2'
  # @@protoc_insertion_point(class_scope:dnstap.Message)
  })
_sym_db.RegisterMessage(Message)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SOCKETFAMILY._serialized_start=1231
  _SOCKETFAMILY._serialized_end=1266
  _SOCKETPROTOCOL._serialized_start=1268
  _SOCKETPROTOCOL._serialized_end=1363
  _HTTPPROTOCOL._serialized_start=1365
  _HTTPPROTOCOL._serialized_end=1412
  _DNSTAP._serialized_start=25
  _DNSTAP._serialized_end=173
  _DNSTAP_TYPE._serialized_start=154
  _DNSTAP_TYPE._serialized_end=173
  _POLICY._serialized_start=176
  _POLICY._serialized_end=465
  _POLICY_MATCH._serialized_start=305
  _POLICY_MATCH._serialized_end=379
  _POLICY_ACTION._serialized_start=381
  _POLICY_ACTION._serialized_end=465
  _MESSAGE._serialized_start=468
  _MESSAGE._serialized_end=1229
  _MESSAGE_TYPE._serialized_start=952
  _MESSAGE_TYPE._serialized_end=1229
# @@protoc_insertion_point(module_scope)
